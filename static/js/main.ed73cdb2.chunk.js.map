{"version":3,"sources":["components/prayer/PrayerInput.js","components/prayer/PrayerSuccess.js","App.js","reportWebVitals.js","index.js"],"names":["PrayerInput","props","React","useState","inputValue","setInputValue","className","style","display","isDone","type","onKeyUp","e","keyCode","onDone","onChange","target","value","placeholder","PrayerSuccess","onClick","App","setIsDone","src","process","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA4BeA,MA1Bf,SAAqBC,GACnB,IAD0B,EAEUC,IAAMC,SAAS,IAFzB,mBAEnBC,EAFmB,KAEPC,EAFO,KAmB1B,OACE,qBAAKC,UAAU,cAAcC,MAAO,CAACC,QAASP,EAAMQ,OAAS,OAAS,SAAtE,SACE,uBAAOC,KAAK,OAAOC,QAbvB,SAAsBC,GAPC,KAQjBA,EAAEC,UAMNZ,EAAMa,QAAO,GACbT,EAAc,MAK8BC,UAAU,YAAYS,SAjBpE,SAA2BH,GACzBP,EAAcO,EAAEI,OAAOC,QAgBwEC,YAAY,gCAAgCD,MAAOb,O,MCVvIe,MAXf,SAAuBlB,GAGrB,OACE,sBAAKK,UAAU,gBAAgBC,MAAO,CAACC,QAASP,EAAMQ,OAAS,QAAU,QAAzE,UACE,4BAJY,oDAKZ,wBAAQC,KAAK,SAASU,QAAS,kBAAMnB,EAAMa,QAAO,IAAlD,6BCYSO,MAdf,WAAgB,IAAD,EACenB,IAAMC,UAAS,GAD9B,mBACNM,EADM,KACEa,EADF,KAGb,OACE,qBAAKhB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,MAAO,CAACC,QAASC,EAAS,OAAS,SAAUc,IAAKC,4BAA6ClB,UAAU,WAAWmB,IAAI,SAC7H,cAAC,EAAD,CAAahB,OAAQA,EAAQK,OAAQQ,IACrC,cAAC,EAAD,CAAeb,OAAQA,EAAQK,OAAQQ,UCFhCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ed73cdb2.chunk.js","sourcesContent":["import React from 'react';\n\nfunction PrayerInput(props) {\n  const ENTER_KEY_CODE = 13;\n  const [inputValue, setInputValue] = React.useState('');\n\n  function handleInputChange(e) {\n    setInputValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    if (e.keyCode !== ENTER_KEY_CODE) {\n      return;\n    }\n\n    // TODO: call email api\n\n    props.onDone(true);\n    setInputValue('');\n  }\n\n  return (\n    <div className=\"PrayerInput\" style={{display: props.isDone ? 'none' : 'block'}}>\n      <input type=\"text\" onKeyUp={handleSubmit} className=\"App-input\" onChange={handleInputChange} placeholder=\"What do you want to pray for?\" value={inputValue} />\n    </div>\n  );\n}\n\nexport default PrayerInput;\n","import './PrayerSuccess.css';\n\nfunction PrayerSuccess(props) {\n  const message = 'Your Prayer has been submitted! God bless you! ';\n\n  return (\n    <div className=\"PrayerSuccess\" style={{display: props.isDone ? 'block' : 'none'}}>\n      <p>{message}</p>\n      <button type=\"button\" onClick={() => props.onDone(false)}>Another one</button>\n    </div>\n  );\n}\n\nexport default PrayerSuccess;\n","import React from 'react';\n\nimport './App.css';\nimport PrayerInput from './components/prayer/PrayerInput';\nimport PrayerSuccess from './components/prayer/PrayerSuccess';\n\nfunction App() {\n  const [isDone, setIsDone] = React.useState(false);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img style={{display: isDone ? 'none' : 'block'}} src={process.env.PUBLIC_URL + '/images/logo.png'} className=\"App-logo\" alt=\"logo\" />\n        <PrayerInput isDone={isDone} onDone={setIsDone} />\n        <PrayerSuccess isDone={isDone} onDone={setIsDone} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}